Q79: Perform diagonal traversal of a matrix.

/*
Sample Test Cases:
Input 1:
3 3
1 2 3
4 5 6
7 8 9
Output 1:
1 2 4 7 5 3 6 8 9

*/

//Solution:
#include <stdio.h>

int main() {
    int n, m, i, j;
    int mat[100][100];

    scanf("%d %d", &n, &m);
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
            scanf("%d", &mat[i][j]);

    for (int k = 0; k < n + m - 1; k++) {
        if (k % 2 == 0) {
            for (i = 0; i <= k; i++) {
                j = k - i;
                if (i < n && j < m)
                    printf("%d ", mat[i][j]);
            }
        } else {
            for (j = 0; j <= k; j++) {
                i = k - j;
                if (i < n && j < m)
                    printf("%d ", mat[i][j]);
            }
        }
    }

    printf("\n");
    return 0;
}

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Q80: Multiply two matrices.

/*
Sample Test Cases:
Input 1:
2 3
1 2 3
4 5 6
3 2
7 8
9 10
11 12
Output 1:
58 64
139 154

*/

//Solution:
#include <stdio.h>

int main() {
    int r1, c1, r2, c2, i, j, k;
    int A[100][100], B[100][100], C[100][100] = {0};

    scanf("%d %d", &r1, &c1);
    for (i = 0; i < r1; i++)
        for (j = 0; j < c1; j++)
            scanf("%d", &A[i][j]);

    scanf("%d %d", &r2, &c2);
    for (i = 0; i < r2; i++)
        for (j = 0; j < c2; j++)
            scanf("%d", &B[i][j]);

    if (c1 != r2) {
        printf("Cannot multiply matrices\n");
        return 0;
    }

    for (i = 0; i < r1; i++)
        for (j = 0; j < c2; j++)
            for (k = 0; k < c1; k++)
                C[i][j] += A[i][k] * B[k][j];

    for (i = 0; i < r1; i++) {
        for (j = 0; j < c2; j++)
            printf("%d ", C[i][j]);
        printf("\n");
    }

    return 0;
}
